/*===============================
  == Os arquivos de cabeçalho  ==
=================================*/
#include <allegro5/allegro.h>
#include <allegro5/allegro_font.h>
#include <allegro5/allegro_ttf.h>
#include <allegro5/allegro_image.h>
#include <allegro5/allegro_audio.h>
#include <allegro5/allegro_acodec.h>
#include <stdio.h>
#include <stdbool.h>

/*===============================
====== Variáveis Globais ========
=================================*/
// Atributos da tela
const int LARGURA_TELA = 1280;
const int ALTURA_TELA = 720;

// A nossa variável janela
ALLEGRO_DISPLAY *janela_inicial = NULL;

// As nossas variáveis para imagens que irão aparecer
ALLEGRO_BITMAP *imagem_inicial = NULL;
ALLEGRO_BITMAP *imagem_opcoes = NULL;
ALLEGRO_BITMAP *imagem_on_Melodia = NULL;
ALLEGRO_BITMAP *imagem_off_Melodia = NULL;
ALLEGRO_BITMAP *imagem_on_SFX = NULL;
ALLEGRO_BITMAP *imagem_off_SFX = NULL;
ALLEGRO_BITMAP *imagem_Iniciante = NULL;
ALLEGRO_BITMAP *imagem_Normal = NULL;
ALLEGRO_BITMAP *imagem_Desafiante = NULL;

//Fila de eventos, ela vai receber as ações do "usuário/programa".
ALLEGRO_EVENT_QUEUE *fila_eventos = NULL;

// O nosso arquivo de fonte
ALLEGRO_FONT *fonte28 = NULL;

// Musica de fundo
ALLEGRO_AUDIO_STREAM *musica = NULL;

// Variáveis auxiliares.
bool sair = false;
bool sound_Melodia = true;
bool sound_SFX = true;
bool iniciante = true;
bool normal = false;
bool desafiante = false;

int tecla = 0;
//int selecionar = 0;

/*===============================
==== Inicizalização/Instalação ==
====== de alguns comandos =======
=================================*/
bool inicicializar_comandos ()
{
    // Inicialização da biblioteca Allegro
    if (!al_init())
    {
        fprintf(stderr, "Falha ao inicializar a Allegro.\n");
        return false;
    }

    // Inicialização do add-on para uso de fontes
    al_init_font_addon();
    al_init_ttf_addon();

    // Inicialização do add-on para uso de fontes True Type(Fontes do instaladas no PC).
    if (!al_init_image_addon())
    {
        fprintf(stderr, "Falha ao inicializar add-on allegro_image.\n");
        return false;
    }

    // Cria nosso Display, e verifica se está tudo certo.
    janela_inicial = al_create_display(LARGURA_TELA, ALTURA_TELA);
    if (!janela_inicial)
    {
        fprintf(stderr, "Falha ao criar janela_inicial.\n");
        return false;
    }

    // Configura o título da janela
    al_set_window_title(janela_inicial, "Nutri Fall");

    // Torna apto o uso de mouse na aplicação
    if (!al_install_mouse())
    {
        fprintf(stderr, "Falha ao inicializar o mouse.\n");
        al_destroy_display(janela_inicial);
        return false;
    }

    // Atribui o cursor padrão do sistema para ser usado
    if (!al_set_system_mouse_cursor(janela_inicial, ALLEGRO_SYSTEM_MOUSE_CURSOR_DEFAULT))
    {
        fprintf(stderr, "Falha ao atribuir ponteiro do mouse.\n");
        al_destroy_display(janela_inicial);
        return false;
    }

    // Inicializa o teclado para uso.
    if (!al_install_keyboard())
    {
        al_destroy_display(janela_inicial);
        fprintf(stderr, "Falha ao inicializar Teclado.\n");
        return false;
    }

    // Carregando o arquivo de fonte.
    fonte28 = al_load_font("old_stamper.ttf", 28, 0);
    if (!fonte28)
    {
        al_destroy_display(janela_inicial);
        fprintf(stderr, "Falha ao carregar fonte28.\n");
        return false;
    }

    if (!al_install_audio())
    {
        fprintf(stderr, "Falha ao inicializar áudio.\n");
        return false;
    }

    if (!al_init_acodec_addon())
    {
        fprintf(stderr, "Falha ao inicializar codecs de áudio.\n");
        return false;
    }

    if (!al_reserve_samples(1))
    {
        fprintf(stderr, "Falha ao alocar canais de áudio.\n");
        return false;
    }

    musica = al_load_audio_stream("musica.ogg", 4, 1024);
    if (!musica)
    {
        fprintf(stderr, "Falha ao carregar audio.\n");
        al_destroy_event_queue(fila_eventos);
        al_destroy_display(janela_inicial);
        return false;
    }

    // Cria nossa fila de eventos, e verifica se está tudo certo.
    fila_eventos = al_create_event_queue();
    if (!fila_eventos)
    {
        fprintf(stderr, "Falha ao criar fila de eventos.\n");
        al_destroy_display(janela_inicial);
        return false;
    }
}

/*===============================
==== Inicialização de Imagens ===
=================================*/
bool inicicializar_imagens()
{
    // Carrega nosso background, e verifica se está tudo certo.
    imagem_inicial = al_load_bitmap("Tela-inicial.png");
    if (!imagem_inicial)
    {
        fprintf(stderr, "Falha ao carregar o arquivo de imagem_inicial.\n");
        al_destroy_display(janela_inicial);
        return false;
    }

    imagem_opcoes = al_load_bitmap("Tela_Opcoes3.0.png");
    if (!imagem_opcoes)
    {
        fprintf(stderr, "Falha ao carregar o arquivo de imagem_opcoes.\n");
        al_destroy_display(janela_inicial);
        return false;
    }

    imagem_on_Melodia = al_load_bitmap("melodia-on.png");
    if (!imagem_on_Melodia)
    {
        fprintf(stderr, "Falha ao carregar o arquivo de imagem_on_Melodia.\n");
        al_destroy_display(janela_inicial);
        return false;
    }

    imagem_off_Melodia = al_load_bitmap("melodia-off.png");
    if (!imagem_off_Melodia)
    {
        fprintf(stderr, "Falha ao carregar o arquivo de imagem_off_Melodia.\n");
        al_destroy_display(janela_inicial);
        return false;
    }

    imagem_on_SFX = al_load_bitmap("sfx-on.png");
    if (!imagem_on_SFX)
    {
        fprintf(stderr, "Falha ao carregar o arquivo de imagem_on_SFX.\n");
        al_destroy_display(janela_inicial);
        return false;
    }

    imagem_off_SFX = al_load_bitmap("sfx-off.png");
    if (!imagem_off_SFX)
    {
        fprintf(stderr, "Falha ao carregar o arquivo de imagem_off_SFX.\n");
        al_destroy_display(janela_inicial);
        return false;
    }

    imagem_Iniciante = al_load_bitmap("Dificuldade_Iniciante.png");
    if (!imagem_Iniciante)
    {
        fprintf(stderr, "Falha ao carregar o arquivo de imagem_Iniciante.\n");
        al_destroy_display(janela_inicial);
        return false;
    }

    imagem_Normal = al_load_bitmap("Dificuldade_Normal.png");
    if (!imagem_Normal)
    {
        fprintf(stderr, "Falha ao carregar o arquivo de imagem_Normal.\n");
        al_destroy_display(janela_inicial);
        return false;
    }

    imagem_Desafiante = al_load_bitmap("Dificuldade_Desafiante.png");
    if (!imagem_Desafiante)
    {
        fprintf(stderr, "Falha ao carregar o arquivo de imagem_Desafiante\n");
        al_destroy_display(janela_inicial);
        return false;
    }
}

/*=====================================
==== Inicialização de Registradores ===
========= da fila de eventos ==========
=======================================*/
void inicializar_registradores_da_fila_de_eventos()
{
    al_attach_audio_stream_to_mixer(musica, al_get_default_mixer());
    al_set_audio_stream_playing(musica, true);

    // Comandos para dizer a "fila de eventos" registrar ações do Display e Teclado.
    al_register_event_source(fila_eventos, al_get_display_event_source(janela_inicial));
    al_register_event_source(fila_eventos, al_get_keyboard_event_source());

    // Dizemos que vamos tratar os eventos vindos do mouse
    al_register_event_source(fila_eventos, al_get_mouse_event_source());
}

/*==============================
==== Desalocação da Memória ====
================================*/

void inicializar_destroy_all()
{
    // Desalocação da Memória
    al_destroy_font(fonte28);

    al_destroy_display(janela_inicial);

    al_destroy_event_queue(fila_eventos);

    al_destroy_bitmap(imagem_inicial);
    al_destroy_bitmap(imagem_opcoes);
    al_destroy_bitmap(imagem_on_Melodia);
    al_destroy_bitmap(imagem_off_Melodia);
    al_destroy_bitmap(imagem_on_SFX);
    al_destroy_bitmap(imagem_off_SFX);
    al_destroy_bitmap(imagem_Iniciante);
    al_destroy_bitmap(imagem_Normal);
    al_destroy_bitmap(imagem_Desafiante);

    al_destroy_audio_stream(musica);
}

/*=====================
==== Início do Jogo ===
=======================*/
int main(void)
{
    inicicializar_comandos();
    inicicializar_imagens();
    inicializar_registradores_da_fila_de_eventos();

    /*=====================
    ===== Tela Inicial ====
    =======================*/

    // Cria nosso background.
    al_draw_bitmap(imagem_inicial, 0, 0, 0);

    // Cria nossos textos "Pressione Enter", e posiciona ambos.
    al_draw_textf(fonte28, al_map_rgb(255, 255, 255), LARGURA_TELA / 2, 605, ALLEGRO_ALIGN_CENTRE, "Pressione");
    al_draw_textf(fonte28, al_map_rgb(255, 255, 255), LARGURA_TELA / 2, 635, ALLEGRO_ALIGN_CENTRE, "Enter");

    // Cria um Loop, onde ele só irá parar se clicar-mos no X(FECHAR JANELA).
    while (!sair)
    {
        // Verificamos se há eventos na fila
        while(!al_is_event_queue_empty(fila_eventos))
        {
            // Comando de espera de ações da fila de eventos.
            ALLEGRO_EVENT evento;
            al_wait_for_event(fila_eventos, &evento);

            // Cria nosso background.
            al_draw_bitmap(imagem_inicial, 0, 0, 0);
            // Cria nossos textos "Pressione Enter", e posiciona ambos.
            al_draw_textf(fonte28, al_map_rgb(255, 255, 255), LARGURA_TELA / 2, 605, ALLEGRO_ALIGN_CENTRE, "Pressione");
            al_draw_textf(fonte28, al_map_rgb(255, 255, 255), LARGURA_TELA / 2, 635, ALLEGRO_ALIGN_CENTRE, "Enter");
            // OBS: Criei ambos novamente para não bugar.

            //Condição para que, se o tipo de evento for pressionar uma tecla, e se essa tecla for ENTER, tecla = 0 recebe 2.
            if (evento.type == ALLEGRO_EVENT_KEY_DOWN)
            {
                switch(evento.keyboard.keycode)
                {
                case ALLEGRO_KEY_ENTER:
                    tecla = 2;
                /*

                FUTURAMENTE USAREMOS

                //seta para cima
                case ALLEGRO_KEY_UP:
                    selecionar = 1;
                    break;
                //seta para baixo
                case ALLEGRO_KEY_DOWN:
                    selecionar = 2;
                    break;
                //seta para esquerda
                case ALLEGRO_KEY_LEFT:
                    selecionar = 3;
                    break;
                //seta para direita.
                case ALLEGRO_KEY_RIGHT:
                    selecionar = 4;
                    break;
                */
                }
            }
            else if (evento.type == ALLEGRO_EVENT_DISPLAY_CLOSE)
            {
                sair = true; //Sendo "TRUE" a janela/jogo será fechada.
            }

            /*=====================
            === Tela de Ajustes ===
            =======================*/

            // Concluíndo que o usuário apertou "ENTER", a criação da tela de opções será realizada.
            if(tecla == 2)
            {
                al_draw_bitmap(imagem_opcoes, 0, 0, 0);

                //Verifica oq está acontecendo com os botões Melodia e Efeitos Sonoros.
                if(sound_Melodia == true)
                {
                    if (evento.type == ALLEGRO_EVENT_MOUSE_AXES || ALLEGRO_EVENT_MOUSE_WARPED)
                    {
                        // Verificamos se ele está sobre a região da imagem habilitado
                        if (evento.mouse.x >= 0 &&
                            evento.mouse.x <= 1280 &&
                            evento.mouse.y >= 0 &&
                            evento.mouse.y <= 720)
                        {
                            sound_Melodia = true;
                        }
                    }

                    if (evento.type == ALLEGRO_EVENT_MOUSE_BUTTON_UP)
                    {
                        // Verificamos se ele está sobre a região da imagem habilitado
                        if (evento.mouse.x >= 655 &&
                            evento.mouse.x <= 916 &&
                            evento.mouse.y >= 277 &&
                            evento.mouse.y <= 319)
                        {
                            sound_Melodia = false;
                        }
                    }
                }

                else if(sound_Melodia == false)
                {
                    if (evento.type == ALLEGRO_EVENT_MOUSE_AXES || ALLEGRO_EVENT_MOUSE_WARPED)
                    {
                        // Verificamos se ele está sobre a região da imagem habilitado
                        if (evento.mouse.x >= 0 &&
                            evento.mouse.x <= 1280 &&
                            evento.mouse.y >= 0 &&
                            evento.mouse.y <= 720)
                        {
                            sound_Melodia = false;
                        }
                    }
                    if (evento.type == ALLEGRO_EVENT_MOUSE_BUTTON_UP)
                    {
                        // Verificamos se ele está sobre a região da imagem habilitado
                        if (evento.mouse.x >= 655 &&
                            evento.mouse.x <= 960 &&
                            evento.mouse.y >= 277 &&
                            evento.mouse.y <= 319)
                        {
                            sound_Melodia = true;
                        }
                    }
                }

                if(sound_SFX == true)
                {
                    if (evento.type == ALLEGRO_EVENT_MOUSE_AXES || ALLEGRO_EVENT_MOUSE_WARPED)
                    {
                        // Verificamos se ele está sobre a região da imagem habilitado
                        if (evento.mouse.x >= 0 &&
                            evento.mouse.x <= 1280 &&
                            evento.mouse.y >= 0 &&
                            evento.mouse.y <= 720)
                        {
                            sound_SFX = true;
                        }
                    }

                    if (evento.type == ALLEGRO_EVENT_MOUSE_BUTTON_UP)
                    {
                        // Verificamos se ele está sobre a região da imagem habilitado
                        if (evento.mouse.x >= 655 &&
                            evento.mouse.x <= 916 &&
                            evento.mouse.y >= 338 &&
                            evento.mouse.y <= 380)
                        {
                            sound_SFX = false;
                        }
                    }
                }

                else if(sound_SFX == false)
                {
                    if (evento.type == ALLEGRO_EVENT_MOUSE_AXES || ALLEGRO_EVENT_MOUSE_WARPED)
                    {
                        // Verificamos se ele está sobre a região da imagem habilitado
                        if (evento.mouse.x >= 0 &&
                            evento.mouse.x <= 1280 &&
                            evento.mouse.y >= 0 &&
                            evento.mouse.y <= 720)
                        {
                            sound_SFX = false;
                        }
                    }

                    if (evento.type == ALLEGRO_EVENT_MOUSE_BUTTON_UP)
                    {
                        // Verificamos se ele está sobre a região da imagem habilitado
                        if (evento.mouse.x >= 655 &&
                            evento.mouse.x <= 960 &&
                            evento.mouse.y >= 338 &&
                            evento.mouse.y <= 380)
                        {
                            sound_SFX = true;
                        }
                    }
                }

                //DIFICULDADE DO JOGO
                if(iniciante == true)
                {
                    if (evento.type == ALLEGRO_EVENT_MOUSE_AXES || ALLEGRO_EVENT_MOUSE_WARPED)
                    {
                        // Verificamos se ele está sobre a região da imagem habilitado
                        if (evento.mouse.x >= 0 &&
                            evento.mouse.x <= 1280 &&
                            evento.mouse.y >= 0 &&
                            evento.mouse.y <= 720)
                        {
                            iniciante = true;
                        }
                    }

                    if (evento.type == ALLEGRO_EVENT_MOUSE_BUTTON_UP)
                    {
                        // Verificamos se ele está sobre a região da imagem habilitado
                        if (evento.mouse.x >= 536 &&
                            evento.mouse.x <= 752 &&
                            evento.mouse.y >= 487 &&
                            evento.mouse.y <= 529)
                        {
                            iniciante = false;
                            normal = true;
                        }
                    }
                }

                 if(normal == true)
                {
                    if (evento.type == ALLEGRO_EVENT_MOUSE_AXES || ALLEGRO_EVENT_MOUSE_WARPED)
                    {
                        // Verificamos se ele está sobre a região da imagem habilitado
                        if (evento.mouse.x >= 0 &&
                            evento.mouse.x <= 1280 &&
                            evento.mouse.y >= 0 &&
                            evento.mouse.y <= 720)
                        {
                            normal = true;
                        }
                    }

                    if (evento.type == ALLEGRO_EVENT_MOUSE_BUTTON_UP)
                    {
                        // Verificamos se ele está sobre a região da imagem habilitado
                        if (evento.mouse.x >= 553 &&
                            evento.mouse.x <= 729 &&
                            evento.mouse.y >= 487 &&
                            evento.mouse.y <= 529)
                        {
                            normal = false;
                            desafiante = true;
                        }
                    }
                }

                if(desafiante == true)
                {
                    if (evento.type == ALLEGRO_EVENT_MOUSE_AXES || ALLEGRO_EVENT_MOUSE_WARPED)
                    {
                        // Verificamos se ele está sobre a região da imagem habilitado
                        if (evento.mouse.x >= 0 &&
                            evento.mouse.x <= 1280 &&
                            evento.mouse.y >= 0 &&
                            evento.mouse.y <= 720)
                        {
                            desafiante = true;
                        }
                    }

                    if (evento.type == ALLEGRO_EVENT_MOUSE_BUTTON_UP)
                    {
                        // Verificamos se ele está sobre a região da imagem habilitado
                        if (evento.mouse.x >= 511 &&
                            evento.mouse.x <= 768 &&
                            evento.mouse.y >= 487 &&
                            evento.mouse.y <= 529)
                        {
                            desafiante = false;
                            iniciante = true;
                        }
                    }
                }

                //Aplica oq foi captado pelo  vereficador do mouse acima.

                //Música e Efeitos Sonoros
                if(sound_Melodia == true)
                {
                    al_draw_bitmap(imagem_on_Melodia , 0, 0, 0);
                    al_set_audio_stream_playing(musica, true);
                }
                else
                    if(sound_Melodia == false)
                    {
                        al_draw_bitmap(imagem_off_Melodia , 0, 0, 0);
                        al_set_audio_stream_playing(musica, false);
                    }

                if(sound_SFX == true)
                {
                    al_draw_bitmap(imagem_on_SFX , 0, 0, 0);
                }
                else
                    if(sound_SFX == false)
                    {
                        al_draw_bitmap(imagem_off_SFX , 0, 0, 0);
                    }

                //Deficuldades
                if(iniciante == true)
                {
                    al_draw_bitmap(imagem_Iniciante , 0, 0, 0);
                }
                else
                    if(iniciante == false)
                    {
                        normal = true;
                    }

                if(normal == true)
                {
                    al_draw_bitmap(imagem_Normal , 0, 0, 0);
                }
                else
                    if(normal == false && desafiante == true)
                    {
                        al_draw_bitmap(imagem_Desafiante , 0, 0, 0);
                    }

                if(desafiante == true)
                {
                    al_draw_bitmap(imagem_Desafiante , 0, 0, 0);
                }
                else
                    if(desafiante == false && iniciante == true)
                    {
                        al_draw_bitmap(imagem_Iniciante , 0, 0, 0);
                    }

            }
        }
        // Atualiza a tela
        al_flip_display();
    }

    inicializar_destroy_all();

    return 0;
}
